name: "Generate Previews"

on:
  workflow_call:
  push:
    paths:
      - '.github/workflows/generate_previews.yml'
      - 'preview/sources/**'
    branches:
      - master

jobs:
  generate_preview:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4

    - name: Install Nix
      uses: cachix/install-nix-action@v27
      with:
        nix_path: nixpkgs=channel:nixos-unstable
        github_access_token: ${{ secrets.GITHUB_TOKEN }}

    - name: Download Fonts
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        gh release download --repo ${{ github.repository }} --pattern "*.tar.zst" --dir ./artifacts

    - name: Extract Fonts
      run: |
        mkdir fonts
        tar --zstd -xf artifacts/Iosevkata-v*.tar.zst -C ./fonts
        tar --zstd -xf artifacts/IosevkataNerdFont-v*.tar.zst -C ./fonts
        tar --zstd -xf artifacts/IosevkataNerdFontMono-v*.tar.zst -C ./fonts

    - name: Install Fonts
      run: |
        mkdir -p ~/.fonts
        cp ./fonts/*.ttf ~/.fonts/
        fc-cache -fv
        fc-list | grep -i Iosevkata

    - name: Generate Preview Images
      uses: workflow/nix-shell-action@v3.4.0
      with:
        flakes-from-devshell: true
        script: |
          echo "Generating preview images from source files..."
          echo

          # Get current timestamp
          timestamp=$(date -u +"%Y-%m-%d %H:%M:%S UTC")

          # Extract font version from local file
          font_file=$(find artifacts -maxdepth 1 -type f -name 'Iosevkata-v*.tar.zst' | head -n 1)
          if [ -z "$font_file" ]; then
            echo "‚ùå Font file not found in artifacts/, exiting."
            exit 1
          fi

          # Extract semver from filename
          font_version=$(echo "$font_file" | sed -n 's|.*Iosevkata-v\([0-9.]*\)\.tar\.zst|\1|p')

          # Common comment prefix
          comment_prefix="//"

          # Build comment line
          comment="$comment_prefix Preview generated at $timestamp with Iosevkata Nerd Font v$font_version"

          for file in ./preview/sources/*; do
            filename=$(basename "$file")
            name="${filename%.*}"
            ext="${filename##*.}"
            output="./preview/images/${name}.png"

            echo "üîπ Processing: $filename"
            echo "   ‚Æï Output:   ${output}"
            echo "   ‚Æï Appending comment line \"$comment\""

            # Create temporary directory and file with correct extension
            tmpdir=$(mktemp -d)
            tmpfile="$tmpdir/temp.$ext"

            {
              echo "$comment"
              cat "$file"
            } > "$tmpfile"

            silicon "$tmpfile" \
              --output "$output" \
              --theme "./preview/themes/Catppuccin Frappe.tmTheme" \
              --pad-horiz 0 \
              --pad-vert 0 \
              --background '#fff0' \
              --font "Iosevkata Nerd Font=48" \
              --no-window-controls \
              --no-round-corner

            if [ $? -eq 0 ]; then
              echo "   ‚úÖ Success"
            else
              echo "   ‚ùå Failed to generate image for $filename"
            fi

            echo
          done

          echo "Done!"

    - name: Configure Git Credentials
      run: |
        git config user.name github-actions[bot]
        git config user.email github-actions[bot]@users.noreply.github.com

    - name: Push Preview Images
      run: |
        if git status --porcelain preview/images | grep -E '^\s*[M?]'; then
          echo "Preview image changed, committing..."
          git add preview/images
          git commit -m "Update font preview"
          git push
        else
          echo "Preview image unchanged, skipping commit."
        fi
